#!/usr/bin/sh

# Set LCD brightness

# Display usage
usage() {
  cat << END
Set LCD brightness

USAGE: lcdbrightness [-p] [-n] [-h] [-i DELTA] [-d DELTA] [max] [min] [VALUE]

Running without any arguments displays the currently set brightness.

  -h	show this information and exit.
  -p	show the current brightness in percentage.
  -n	show the current brightness in absolute value, equivalent to
        "lcdbrightness".
  -i	increase the brightness by DELTA.
  -d	decrease the brightness by DELTA.
  max	set maximum LCD brightness, equal to the value stored at
        "$location/max_brightness".
  min	set minimum LCD brightness; equivalent to "lcdbrightness 0".
  VALUE	the brightness value to set.
        VALUE must be an integer such that 0 <= VALUE <= max, incorrect values
        other than the options above will fail.

This script tries to write to "$location/brightness".
A udev rule allowing any users(including you) in the "video" group to write to
it must be present to avoid running with elevated privileges. See
https://gitlab.com/wavexx/acpilight for an example.

END
}

# The location where files controlling the brightness are stored.
location="/sys/class/backlight/intel_backlight"

# The max brightness
max="$(cat "$location/max_brightness")"

# The current brightness
curr=$(cat "$location/brightness")

# If no argument is given, print current brightness and exit
[ -z "$*" ] && echo "$curr" && exit 0

# Map argument accordingly
case "$1" in
	"-n") echo "$curr" && exit 0 ;;
	"-p") echo "$((curr * 100/ max))" && exit 0;;
	"-i") value=$((curr + $2)) && [ "$value" -gt "$max" ] && value=$max ;;
	"-d") value=$((curr - $2)) && [ "$value" -lt 0 ] && value=0 ;;
	"-h") usage && exit 0 ;;
	"max") value="$max" ;;
	"min") value=0 ;;
	*)  value="$*"
esac

# Change brightness accordingly, sanity-checks are handled
echo "$value" > "$location/brightness" || \
	printf "Invalid brightness value.\nRun \"lcdbrightness -h\" for help.\n" && exit 1

unset location value max curr
unset -f usage
exit 0
